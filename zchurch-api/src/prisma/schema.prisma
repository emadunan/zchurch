// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String?
  isActive  Boolean
  joinDate  DateTime @default(now())
  lastLogin DateTime @default(now())
  profile   Profile?
}

model Profile {
  id        Int      @id @default(autoincrement())
  firstname String   @db.VarChar(50)
  lastname  String   @db.VarChar(50)
  gender    String   @db.VarChar(10)
  country   Country  @relation(fields: [countryId], references: [id])
  countryId Int
  mobile    String   @db.VarChar(20)
  birthDate DateTime
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
}

model Country {
  id      Int       @id @default(autoincrement())
  nam     String    @unique
  iso     String    @db.Char(3)
  code    String    @db.VarChar(10)
  title   String    @db.VarChar(50)
  Profile Profile[]
}

model Book {
  id       Int       @id @default(autoincrement())
  nam      String    @db.VarChar(50)
  symbol   String    @db.VarChar(5)
  title    String    @db.VarChar(50)
  titlef   String    @db.VarChar(100)
  titlelng String    @db.VarChar(255)
  chapters Chapter[]
}

model Chapter {
  id     Int     @id @default(autoincrement())
  numbr  Int
  title  String  @db.VarChar(50)
  titlef String  @db.VarChar(100)
  book   Book    @relation(fields: [bookId], references: [id])
  bookId Int
  verses Verse[]
}

model Verse {
  id          Int          @id @default(autoincrement())
  numbr       Int
  textu       String
  textf       String
  chapter     Chapter      @relation(fields: [chapterId], references: [id])
  chapterId   Int
  expressions Expression[]
}

model Expression {
  id         Int        @id @default(autoincrement())
  textu      String     @db.VarChar(100)
  textf      String     @db.VarChar(200)
  definition String
  verses     Verse[]
  reactions  Reaction[]
}

model Reaction {
  id           Int        @id @default(autoincrement())
  content      String
  reactedAt    DateTime   @default(now())
  expression   Expression @relation(fields: [expressionId], references: [id], onDelete: Cascade)
  expressionId Int
}
